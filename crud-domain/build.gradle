tasks.bootJar.enabled = false
tasks.jar.enabled = true

dependencies {
    implementation project(':crud-common')

    /* Security */
    implementation 'org.springframework.boot:spring-boot-starter-security'

    /* H2 DataBase */
    runtimeOnly 'com.h2database:h2'

    /* Query Log 물음표 변환 */
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'

    /* JPA */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    /* Validation */
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    /* QueryDSL */
    implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'			// QueryDSL JPA 라이브러리
    annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'		// QClass 생성 라이브러리
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

def queryDslSrcDir = 'src/main/generated'

sourceSets {
    main.java.srcDirs += [queryDslSrcDir]
}

configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile).configureEach {
	options.generatedSourceOutputDirectory.set(file(queryDslSrcDir))
}

clean {
    delete file(queryDslSrcDir)
}