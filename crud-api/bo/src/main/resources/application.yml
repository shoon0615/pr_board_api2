# spring.application.name=pr_crud_bo_api

server:
  port: 8091

spring:
  freemarker:
    cache: false
  profiles:
    active: local

---
# JPA
spring:
  jpa:
    open-in-view: false
    defer-datasource-initialization: true
    hibernate:
      format_sql: true
      ddl-auto: update
      highlight_sql: true
      use_sql_comments: true
      jdbc:
        batch_size: 100
      order_inserts: true
      order_updates: true
    generate-ddl: true
    properties:
      hibernate:
        default_batch_fetch_size: 100
  sql:
    init:
      mode: always
      continue-on-error: true
#      schema-locations: classpath:schema.sql
#      data-locations: classpath:data.sql

---
# h2
spring:
  h2:
    console:
#      enabled: true     # H2 Console 사용 여부
#      path: /h2-console # H2 Console 의 Path
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      dialect: org.hibernate.dialect.H2Dialect

---
# local
# TestApiApplication -> Edit Configurations.. -> Environment variables -> User 부분에 추가
# H2 DataBase -> localhost:8090/h2-console 접속 -> drop all objects 모든 테이블 삭제(FK 무시)
spring:
  console:
    enabled: true
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:~/crud3
    #    url: jdbc:h2:tcp://localhost/~/crud;AUTO_SERVER=true
    username: sa
    password:

  # 환경변수 설정
#  datasource:
#    driver-class-name: org.h2.Driver
#    url: ${LOCAL_DB_URL}
#    username: ${LOCAL_DB_ID}
#    password: ${LOCAL_DB_PW}

---
# dev

---
# prod

---
# Swagger
springdoc:
#  default-consumes-media-type: application/json;charset=UTF-8
#  default-produces-media-type: application/json;charset=UTF-8
  default-consumes-media-type: application/json
  default-produces-media-type: application/json
  show-actuator: true
  writer-with-default-pretty-printer: true
  swagger-ui:
    tags-sorter: alpha
#    operations-sorter: method
    writer-with-order-by-keys: true
#    path: /swagger-ui/index.html    # 임의로 Swagger url 변경 가능(default: http://localhost:8091/swagger-ui/index.html)

---
# Messages
spring:
  messages:
    basename: messages/messages
    encoding: UTF-8
#    file-extension: yml    # 적용 안 됨 -> properties 만 지원

---
# Jwt
jwt:
  secret: 7Hs9x2mK4Lp6Rw3tYzAqBcDfGjNvXeUi
  token-validity-in-seconds: 86400
  refresh-token-validity-in-seconds: 172800

---
# Etc
spring:
  output:
    ansi:
      enabled: always   # console 모드별 색상 변환